# Create Directories

# Basic Directories
- name: Create Script Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts"
    state: directory

- name: Create installers Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\installers"
    state: directory

- name: Create tools Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools"
    state: directory

- name: Create zipped Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\zipped"
    state: directory

# Directories inside scripts directory
- name: Create conf Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts\\conf"
    state: directory

- name: Create results Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts\\results"
    state: directory

- name: Create artifacts Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\scripts\\results\\artifacts"
    state: directory

# Directories inside tools directory

- name: Create sysinternals Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools\\sys"
    state: directory

- name: Create yara Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools\\yara"
    state: directory

- name: Create antipwny Directory
  ansible.builtin.win_file:
    path: "{{ scripts_path }}\\tools\\antipwny"
    state: directory

# Copy over scripts

- name: Copy Inventory Script
  win_copy:
    src: "{{ scripts_ansible_location }}/audit.ps1"
    dest: "{{ scripts_path }}\\scripts\\audit.ps1"
    remote_src: false

- name: Copy Backup Script
  win_copy:
    src: "{{ scripts_ansible_location }}/backup.ps1"
    dest: "{{ scripts_path }}\\scripts\\backup.ps1"
    remote_src: false

- name: Copy Command runbook
  win_copy:
    src: "{{ scripts_ansible_location }}/command_runbook.txt"
    dest: "{{ scripts_path }}\\scripts\\command_runbook.txt"
    remote_src: false

- name: Copy Firewall Script
  win_copy:
    src: "{{ scripts_ansible_location }}/firewall.ps1"
    dest: "{{ scripts_path }}\\scripts\\firewall.ps1"
    remote_src: false

- name: Copy Injected thread Script
  win_copy:
    src: "{{ scripts_ansible_location }}/Get-InjectedThread.ps1"
    dest: "{{ scripts_path }}\\scripts\\Get-InjectedThread.ps1"
    remote_src: false

- name: Copy Inventory Script
  win_copy:
    src: "{{ scripts_ansible_location }}/inventory.ps1"
    dest: "{{ scripts_path }}\\scripts\\inventoryps1"
    remote_src: false

- name: Copy Logging Script
  win_copy:
    src: "{{ scripts_ansible_location }}/logging.ps1"
    dest: "{{ scripts_path }}\\scripts\\logging.ps1"
    remote_src: false

- name: Copy PrivescCheck Script
  win_copy:
    src: "{{ scripts_ansible_location }}/PrivescCheck.ps1"
    dest: "{{ scripts_path }}\\scripts\\PrivescCheck.ps1"
    remote_src: false

- name: Copy Secure Script
  win_copy:
    src: "{{ scripts_ansible_location }}/secure.ps1"
    dest: "{{ scripts_path }}\\scripts\\secure.ps1"
    remote_src: false

- name: Copy Soar Agent Script
  win_copy:
    src: "{{ scripts_ansible_location }}/soaragent.ps1"
    dest: "{{ scripts_path }}\\scripts\\soaragent.ps1"
    remote_src: false

- name: Copy User Management Script
  win_copy:
    src: "{{ scripts_ansible_location }}/usermgmt.ps1"
    dest: "{{ scripts_path }}\\scripts\\usermgmt.ps1"
    remote_src: false

- name: Copy Yara Script
  win_copy:
    src: "{{ scripts_ansible_location }}/yara.bat"
    dest: "{{ scripts_path }}\\scripts\\yara.bat"
    remote_src: false

# Install Bitlocker and Defender

- name: Install Bitlocker and Defender on Windows Server
  win_shell: |
    Install-WindowsFeature -Name Bitlocker,Windows-Defender
  when: "{{ is_win_server }}" == "true"

# DC Tools

# Group Policies
- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{EE3B9E95-9783-474A-86A5-907E93E64F57}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{EE3B9E95-9783-474A-86A5-907E93E64F57}.zip"
  when: "{{ server_type }}" == "dc"

- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{40E1EAFA-8121-4FFA-B6FE-BC348636AB83}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{40E1EAFA-8121-4FFA-B6FE-BC348636AB83}.zip"
  when: "{{ server_type }}" == "dc"

- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{6136C3E1-B316-4C46-9B8B-8C1FC373F73C}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{6136C3E1-B316-4C46-9B8B-8C1FC373F73C}.zip"
  when: "{{ server_type }}" == "dc"

- name: Copy Group Policies to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/{BEAA6460-782B-4351-B17D-4DC8076633C9}.zip"
    dest: "{{ scripts_path }}\\scripts\\conf\\{BEAA6460-782B-4351-B17D-4DC8076633C9}.zip"
  when: "{{ server_type }}" == "dc"

# Reset krbtgt script

- name: Copy krbtgt reset script to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/Reset-KrbtgtKeyInteractive.ps1"
    dest: "{{ scripts_path }}\\scripts\\Reset-KrbtgtKeyInteractive.ps1"
  when: "{{ server_type }}" == "dc"

# Pingcastle and Adalanche

- name: Copy Pingcastle to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/pc.zip"
    dest: "{{ scripts_path }}\\pc.zip"
  when: "{{ server_type }}" == "dc"

- name: Copy Adalanche to Domain Controller
  win_copy:
    src: "{{ scripts_ansible_location }}/adalanche.exe"
    dest: "{{ scripts_path }}\\tools\\adalanche.exe"
  when: "{{ server_type }}" == "dc"

# Extract Pingcastle and Adalanche

- name: Unzip Pingcastle and Group Policy Objects on Domain Controller
  win_shell: |
    "Expand-Archive -LiteralPath {{ scripts_path }}\\pc.zip -DestinationPath {{ scripts_path }}\\tools\\pc);
    Expand-Archive -LiteralPath {{ scripts_path }}\\conf\\{EE3B9E95-9783-474A-86A5-907E93E64F57}.zip -DestinationPath {{ scripts_path }}\\conf\\;
    Expand-Archive -LiteralPath {{ scripts_path }}\\conf\\{40E1EAFA-8121-4FFA-B6FE-BC348636AB83}.zip -DestinationPath {{ scripts_path }}\\conf\\;
    Expand-Archive -LiteralPath {{ scripts_path }}\\conf\\{6136C3E1-B316-4C46-9B8B-8C1FC373F73C}.zip -DestinationPath {{ scripts_path }}\\conf\\;
    Expand-Archive -LiteralPath {{ scripts_path }}\\conf\\{BEAA6460-782B-4351-B17D-4DC8076633C9}.zip -DestinationPath {{ scripts_path }}\\conf\\"
  when: "{{ is_win_server }}" == "true"

# Local Policy/Client tools

- name: Copy Local GP Policy File to Non DC's
  win_copy:
    src: "{{ scripts_ansible_location }}/localpolicy.PolicyRules"
    dest: "{{ scripts_path }}\\scripts\\conf\\localpolicy.PolicyRules"
  when: "{{ server_type }}" != "dc"

- name: Copy LGPO tool to Non DC's
  win_copy:
    src: "{{ scripts_ansible_location }}/LGPO.zip"
    dest: "{{ scripts_path }}\\lg.zip"
  when: "{{ server_type }}" != "dc"

- name: Unzip LGPO tool on Non DC's
  win_shell: |
    "Expand-Archive -LiteralPath {{ scripts_path }}\\lg.zip -DestinationPath {{ scripts_path }}\\tools\\"
  when: "{{ server_type }}" != "dc"